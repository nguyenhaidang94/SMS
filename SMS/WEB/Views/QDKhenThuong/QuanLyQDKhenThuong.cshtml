@{
    ViewBag.Title = "QL QD Khen Thưởng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Quản lý Quyết định khen thưởng</h3>

<link rel="stylesheet" href="~/Content/kendo/2015.3.1111/kendo.common.min.css" />
<link rel="stylesheet" href="~/Content/kendo/2015.3.1111/kendo.default.min.css" />

<div id="grid-qdkhenthuong"></div>
<div id="div-hocsinh">
    <h3>Danh Sách Học Sinh</h3>
    <div id="grid-hocsinh"></div>
</div>

@section scripts{
<script type="text/x-kendo-template" id="template">
    <button id="btnSelectHocSinh" style="float:right;" class="k-button">Thêm Học Sinh</button>
</script>
<script>
    var dsNamHoc = @Html.Raw(ViewBag.dsNamHoc);
    var dsGioiTinh = [{ "value": true, "text": "Nam" }, { "value": false, "text": "Nữ" }];
    //create main grid
    $(document).ready(function () {
        var dataSource = new kendo.data.DataSource({
            type: "json",
            transport: {
                create: {
                    url: "@Url.Action("Create")",
                    type: "POST",
                    dataType: "json"
                },
                read: {
                    url: "@Url.Action("Read")",
                    type: "POST",
                    dataType: "json"
                },
                update: {
                    url: "@Url.Action("Update")",
                    type: "POST",
                    dataType: "json"
                },
                destroy: {
                    url: "@Url.Action("Delete")",
                    type: "POST",
                    dataType: "json"
                },
                parameterMap: function(options, operation) {
                    if (operation != "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
            batch: true,
            pageSize: 5,
            schema: {
                model: {
                    id: "MaQuyetDinh",
                    fields: {
                        MaQuyetDinh: { type:"number", editable: false, nullable: false},
                        SoQuyetDinh: { validation: {required: true} },
                        MaNamHoc: { type: "number", field: "MaNamHoc", nullable: false },
                        NoiDungQD: { validation: { required: true } },
                        NgayQD: { type: "date", validation: { required: true } },
                        Active: { type: "boolean", defaultValue: true }
                    }
                }
            }
        });

        //create grid-khenthuong
        $("#grid-qdkhenthuong").kendoGrid({
            dataSource: dataSource,
            filterable: false,
            sortable: true,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },
            detailInit: detailInit,
            dataBound: function() {
                this.expandRow(this.tbody.find("tr.k-master-row").first());
            },
            toolbar: ["create"],
            columns: [
                { field: "SoQuyetDinh", title: "Số Quyết Định" },
                { field: "MaNamHoc", values: dsNamHoc, title: "Năm Học" },
                { field: "NoiDungQD", title: "Nội Dung", width: "300px"},
                { field: "NgayQD", title: "Ngày", template: "#= kendo.toString(NgayQD, 'dd/MM/yyyy') #" },
                { command: { text: "Thêm học sinh", click: themHSClick}, title: "&nbsp;" },
                { command: ["edit", "destroy"], title: "&nbsp;"}
            ],
            editable: {
                mode: "inline"
            }
        });

        //create grid-hocsinh
        $("#grid-hocsinh").kendoGrid({
            filterable: false,
            sortable: true,
            editable: true,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },
            toolbar: kendo.template($("#template").html()),
            columns: [
                { field: "HoTen", title: "Họ Tên" },
                { field: "NgaySinh", title: "Ngày Sinh", template: "#= kendo.toString(NgaySinh, 'dd/MM/yyyy') #" },
                { field: "GioiTinh", values: dsGioiTinh, title: "Giới Tính" },
                { field: "Checked", title: "Chọn", template: '<input type="checkbox" #= Checked ? \'checked\' : "" # class="chkbx" />' }
            ]
        });

        //event change Checked property
        $("#grid-hocsinh .k-grid-content").on("change", "input.chkbx", function (e) {
            var grid = $("#grid-hocsinh").data("kendoGrid");
            dataItem = grid.dataItem($(e.target).closest("tr"));
            dataItem.set("Checked", this.checked);
        });

        //event click btnSelectHocSinh
        $("#btnSelectHocSinh").click(function () {
            var selectedItems = $('#grid-hocsinh input:checked');
            if (selectedItems.length == 0)
                alert("Vui lòng chọn học sinh");
            else {
                var grid = $("#grid-hocsinh").data("kendoGrid");
                grid.saveChanges();
            }
        });
    });

    //show detail grid
    function detailInit(e) {
        $("<div/>").appendTo(e.detailCell).kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@Url.Action("ReadCTKhenThuong")",
                        type: "POST",
                        dataType: "json"
                    },
                    update: {
                        url: "@Url.Action("UpdateCTKhenThuong")",
                        type: "POST",
                        dataType: "json"
                    },
                    destroy: {
                        url: "@Url.Action("DeleteCTKhenThuong")",
                        type: "POST",
                        dataType: "json"
                    },
                    parameterMap: function(options, operation) {
                        if (operation == "read") {
                            return options;
                        }
                        else {
                            if (options.models){
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    }
                },
                serverFiltering: true,
                filter: { field: "MaQuyetDinh", operator: "eq", value: e.data.MaQuyetDinh },
                batch: true,
                pageSize: 5,
                schema: {
                    model: {
                        id: "MaHocSinh",
                        fields: {
                            MaQuyetDinh: { type:"number", editable: false, nullable: false, defaultValue: e.data.MaQuyetDinh},
                            MaHocSinh: { type: "number", editable: false, nullable: false },
                            HoTen: { editable: false, nullable: false },
                            LyDoKhenThuong: { validation: {required: true} },
                            HinhThucKhenThuong: { validation: {required: true} },
                            GiaTriKhenThuong: { type: "number" },
                            GhiVaoHocBa: { type: "boolean", validation: { required: true } },
                            Active: { type: "boolean", defaultValue: true }
                        }
                    }
                }
            },
            filterable: false,
            sortable: true,
            editable: true,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },
            columns: [
                { field: "HoTen", title: "Họ Tên"},
                { field: "LyDoKhenThuong", title: "Lý do khen thưởng"},
                { field: "HinhThucKhenThuong", title:"Hình thức khen thưởng"},
                { field: "GiaTriKhenThuong", title:"Giá trị khen thưởng" },
                { field: "GhiVaoHocBa", title: "Ghi học bạ"},
                { command: ["edit", "destroy"], title: "&nbsp;"}
            ],
            editable: {
                mode: "inline",
            }
        });
    }

    //event click ThemHocSinh
    function themHSClick(e){
        var grid = $("#grid-qdkhenthuong").data("kendoGrid");
        var id = dataItem = grid.dataItem($(e.target).closest("tr")).id;
        if (id != null)
        {
            var hsDataSource = new kendo.data.DataSource({
                type: "json",
                transport: {
                    read: {
                        url: "@Url.Action("ReadHocSinh")",
                        type: "POST",
                        dataType: "json"
                    },
                    update: {
                        url: "@Url.Action("SelectHocSinh")",
                        type: "POST",
                        dataType: "json"
                    },
                    parameterMap: function(options, operation) {
                        if (operation == "read") {
                            return options;  
                        }
                        else if (operation == "update"){
                            return { models: kendo.stringify(options.models), maqd: id };
                        }
                        else {
                            return { models: kendo.stringify(options.models) };
                        }
                    }
                },
                batch: true,
                pageSize: 5,
                serverFiltering: true,
                filter: { field: "MaQuyetDinh", operator: "neq", value: id },
                schema: {
                    model: {
                        id: "MaHocSinh",
                        fields: {
                            MaHocSinh: { type: "number" },
                            HoTen: { type: "string" },
                            NgaySinh: { type: "date" },
                            GioiTinh: { type: "boolean" },
                            Checked: { type: "boolean" },
                            Active: { type: "boolean" }
                        }
                    }
                }
            });
            $("#grid-hocsinh").data("kendoGrid").setDataSource(hsDataSource);
        }
    }
</script>   
}